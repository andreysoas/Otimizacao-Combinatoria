# -*- coding: utf-8 -*-
"""Heurística construtiva do vizinho mais próximo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bGsk8KuIpwUwfhoa_gGBL162rInm9lUW

Usando Heurística construtiva do vizinho mais próximo
"""

import numpy as np
import time

#lambda (x,y): x if x < y else y
  def vizinho(d,i,caminho,disponiveis):
    disponiveis.remove(i)
    if len(caminho)==len(d[0]): 
      return caminho
    else:
      minimo = -1
      ind = -1
      for j in disponiveis:
        if(j==disponiveis[0]):
          minimo = d[i-1][j-1]
          ind = j
        else:
          if d[i-1][j-1] < minimo:
            minimo = d[i-1][j-1]
            ind = j
    caminho.append(ind)
    caminho=vizinho(d,ind,caminho,disponiveis)
    return caminho
    
  def HVP(d,inicio,disponiveis): #d é a matriz , i é o inicio, var é a lista de variáveis
    ini = time.time()
    caminho = [inicio] #[1] , [1,2,3,4,5,6]
  
    caminho_final = vizinho(d,inicio,caminho,disponiveis)

    print('Solução: ',caminho_final)
    #return caminho_final
    print('Custo: ',f_obj(caminho_final,d))
    fim = time.time()
    print('Tempo total: ',fim-ini)
# disponiveis = [1,2,3,4,5,6]

def f_obj(solucao,d):
  soma=0
  for i in range(0,len(solucao)-1): 
    soma+=d[solucao[i]-1][solucao[i+1]-1]

  soma+=d[solucao[-1]-1][solucao[0]-1]
  return soma

"""Entrada e chamada da função"""

s = [1,2,3,4,5,6,7]
d = np.array([0,30,40,55,28,17,33,
              30,0,29,68,35,20,56,
              40,29,0,47,22,24,46,
              55,68,47,0,31,51,27,
              28,35,22,31,0,20,25,
              17,20,24,51,20,0,36,
              33,56,46,27,25,36,0]).reshape(7,7)
cm = HVP(d,1,s)

s = [1,2,3,4,5,6]
d = np.array([0,25,30,40,42,28,
              25,0,22,28,30,32,
              30,22,0,37,42,29,
              40,28,37,0,31,39,
              42,30,42,31,0,46,
              28,32,29,39,46,0]).reshape(6,6)
cm = HVP(d,1,s)